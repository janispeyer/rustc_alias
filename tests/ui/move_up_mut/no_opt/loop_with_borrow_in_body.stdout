# Analysing main
# Analysing loop_with_borrow_in_body
# TopOfBorrowStack Analysis
bb0
[ 0] [_1] <- Retag([fn entry] _1)
[ 1] [_1] <- (*_1) = const 42_i32
[ 2] [_1] <- StorageLive(_3)
[ 3] [_1] <- StorageLive(_4)
[ 4] [_1] <- StorageLive(_5)
[ 5] [_1] <- Deinit(_5)
[ 6] [_1] <- (_5.0: i32) = const 0_i32
[ 7] [_1] <- (_5.1: i32) = const 3_i32
[ 8] [_1] <- _4 = <std::ops::Range<i32> as std::iter::IntoIterator>::into_iter(move _5) -> bb1

bb1
[ 0] [] <- StorageDead(_5)
[ 1] [] <- StorageLive(_6)
[ 2] [] <- _6 = move _4
[ 3] [] <- goto -> bb2

bb2
[ 0] [] <- StorageLive(_8)
[ 1] [] <- StorageLive(_9)
[ 2] [] <- StorageLive(_10)
[ 3] [] <- StorageLive(_11)
[ 4] [] <- _11 = &mut _6
[ 5] [] <- Retag(_11)
[ 6] [] <- _10 = &mut (*_11)
[ 7] [] <- Retag([2phase] _10)
[ 8] [] <- _9 = <std::ops::Range<i32> as std::iter::Iterator>::next(move _10) -> bb3

bb3
[ 0] [] <- StorageDead(_10)
[ 1] [] <- _12 = discriminant(_9)
[ 2] [] <- switchInt(move _12) -> [0_isize: bb6, 1_isize: bb4, otherwise: bb5]

bb4
[ 0] [] <- StorageLive(_14)
[ 1] [] <- _14 = some_fn() -> bb7

bb5
[ 0] [] <- unreachable

bb6
[ 0] [] <- _3 = const ()
[ 1] [] <- StorageDead(_11)
[ 2] [] <- StorageDead(_9)
[ 3] [] <- StorageDead(_8)
[ 4] [] <- StorageDead(_6)
[ 5] [] <- StorageDead(_4)
[ 6] [] <- StorageDead(_3)
[ 7] [] <- _0 = (*_1)
[ 8] [] <- return

bb7
[ 0] [] <- StorageDead(_14)
[ 1] [] <- StorageLive(_15)
[ 2] [] <- _15 = &mut (*_1)
[ 3] [] <- Retag(_15)
[ 4] [] <- (*_15) = const 5_i32
[ 5] [] <- _8 = const ()
[ 6] [] <- StorageDead(_15)
[ 7] [] <- StorageDead(_11)
[ 8] [] <- StorageDead(_9)
[ 9] [] <- StorageDead(_8)
[10] [] <- _7 = const ()
[11] [] <- goto -> bb2

# FindImmutabilitySpans Analysis
bb0
[ 0] {} <- Retag([fn entry] _1)
[ 1] {_1: Span(bb0[1])} <- (*_1) = const 42_i32
[ 2] {_1: Span(bb0[1])} <- StorageLive(_3)
[ 3] {_1: Span(bb0[1])} <- StorageLive(_4)
[ 4] {_1: Span(bb0[1])} <- StorageLive(_5)
[ 5] {_1: Span(bb0[1])} <- Deinit(_5)
[ 6] {_1: Span(bb0[1])} <- (_5.0: i32) = const 0_i32
[ 7] {_1: Span(bb0[1])} <- (_5.1: i32) = const 3_i32
[ 8] {_1: Span(bb0[1])} <- _4 = <std::ops::Range<i32> as std::iter::IntoIterator>::into_iter(move _5) -> bb1

bb1
[ 0] {_1: Top} <- StorageDead(_5)
[ 1] {_1: Top} <- StorageLive(_6)
[ 2] {_1: Top} <- _6 = move _4
[ 3] {_1: Top} <- goto -> bb2

bb2
[ 0] {_1: Top} <- StorageLive(_8)
[ 1] {_1: Top} <- StorageLive(_9)
[ 2] {_1: Top} <- StorageLive(_10)
[ 3] {_1: Top} <- StorageLive(_11)
[ 4] {_1: Top} <- _11 = &mut _6
[ 5] {_1: Top} <- Retag(_11)
[ 6] {_1: Top} <- _10 = &mut (*_11)
[ 7] {_1: Top} <- Retag([2phase] _10)
[ 8] {_1: Top} <- _9 = <std::ops::Range<i32> as std::iter::Iterator>::next(move _10) -> bb3

bb3
[ 0] {_1: Top} <- StorageDead(_10)
[ 1] {_1: Top} <- _12 = discriminant(_9)
[ 2] {_1: Top} <- switchInt(move _12) -> [0_isize: bb6, 1_isize: bb4, otherwise: bb5]

bb5
[ 0] {_1: Top} <- unreachable

bb4
[ 0] {_1: Top} <- StorageLive(_14)
[ 1] {_1: Top} <- _14 = some_fn() -> bb7

bb7
[ 0] {_1: Top} <- StorageDead(_14)
[ 1] {_1: Top} <- StorageLive(_15)
[ 2] {_1: Top} <- _15 = &mut (*_1)
[ 3] {_1: Top} <- Retag(_15)
[ 4] {_1: Top} <- (*_15) = const 5_i32
[ 5] {_1: Top} <- _8 = const ()
[ 6] {_1: Top} <- StorageDead(_15)
[ 7] {_1: Top} <- StorageDead(_11)
[ 8] {_1: Top} <- StorageDead(_9)
[ 9] {_1: Top} <- StorageDead(_8)
[10] {_1: Top} <- _7 = const ()
[11] {_1: Top} <- goto -> bb2

bb6
[ 0] {_1: Top} <- _3 = const ()
[ 1] {_1: Top} <- StorageDead(_11)
[ 2] {_1: Top} <- StorageDead(_9)
[ 3] {_1: Top} <- StorageDead(_8)
[ 4] {_1: Top} <- StorageDead(_6)
[ 5] {_1: Top} <- StorageDead(_4)
[ 6] {_1: Top} <- StorageDead(_3)
[ 7] {_1: Top} <- _0 = (*_1)
[ 8] {_1: Top} <- return


# CFG Before
bb0
Retag([fn entry] _1)
(*_1) = const 42_i32
StorageLive(_3)
StorageLive(_4)
StorageLive(_5)
Deinit(_5)
(_5.0: i32) = const 0_i32
(_5.1: i32) = const 3_i32
_4 = <std::ops::Range<i32> as std::iter::IntoIterator>::into_iter(move _5) -> bb1

bb1
StorageDead(_5)
StorageLive(_6)
_6 = move _4
goto -> bb2

bb2
StorageLive(_8)
StorageLive(_9)
StorageLive(_10)
StorageLive(_11)
_11 = &mut _6
Retag(_11)
_10 = &mut (*_11)
Retag([2phase] _10)
_9 = <std::ops::Range<i32> as std::iter::Iterator>::next(move _10) -> bb3

bb3
StorageDead(_10)
_12 = discriminant(_9)
switchInt(move _12) -> [0_isize: bb6, 1_isize: bb4, otherwise: bb5]

bb4
StorageLive(_14)
_14 = some_fn() -> bb7

bb5
unreachable

bb6
_3 = const ()
StorageDead(_11)
StorageDead(_9)
StorageDead(_8)
StorageDead(_6)
StorageDead(_4)
StorageDead(_3)
_0 = (*_1)
return

bb7
StorageDead(_14)
StorageLive(_15)
_15 = &mut (*_1)
Retag(_15)
(*_15) = const 5_i32
_8 = const ()
StorageDead(_15)
StorageDead(_11)
StorageDead(_9)
StorageDead(_8)
_7 = const ()
goto -> bb2

# CFG After
bb0
Retag([fn entry] _1)
(*_1) = const 42_i32
StorageLive(_3)
StorageLive(_4)
StorageLive(_5)
Deinit(_5)
(_5.0: i32) = const 0_i32
(_5.1: i32) = const 3_i32
_4 = <std::ops::Range<i32> as std::iter::IntoIterator>::into_iter(move _5) -> bb1

bb1
StorageDead(_5)
StorageLive(_6)
_6 = move _4
goto -> bb2

bb2
StorageLive(_8)
StorageLive(_9)
StorageLive(_10)
StorageLive(_11)
_11 = &mut _6
Retag(_11)
_10 = &mut (*_11)
Retag([2phase] _10)
_9 = <std::ops::Range<i32> as std::iter::Iterator>::next(move _10) -> bb3

bb3
StorageDead(_10)
_12 = discriminant(_9)
switchInt(move _12) -> [0_isize: bb6, 1_isize: bb4, otherwise: bb5]

bb4
StorageLive(_14)
_14 = some_fn() -> bb7

bb5
unreachable

bb6
_3 = const ()
StorageDead(_11)
StorageDead(_9)
StorageDead(_8)
StorageDead(_6)
StorageDead(_4)
StorageDead(_3)
_0 = (*_1)
return

bb7
StorageDead(_14)
StorageLive(_15)
_15 = &mut (*_1)
Retag(_15)
(*_15) = const 5_i32
_8 = const ()
StorageDead(_15)
StorageDead(_11)
StorageDead(_9)
StorageDead(_8)
_7 = const ()
goto -> bb2

# Analysing some_fn
